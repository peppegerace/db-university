SELECT
1. Selezionare tutti gli studenti nati nel 1990 (160)
  
  SELECT *
  FROM `students`
  WHERE YEAR(date_of_birth) = 1990;


2. Selezionare tutti i corsi che valgono più di 10 crediti (479)

  SELECT *
  FROM `courses`
  WHERE `cfu` > 10;


3. Selezionare tutti gli studenti che hanno più di 30 anni

  SELECT * 
  FROM `students`
  WHERE TIMESTAMPDIFF(YEAR, date_of_birth, CURDATE()) > 30;


4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)

  SELECT * 
  FROM `courses` 
  WHERE `period` = 'I semestre'
  AND `year` = 1;


5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)

  SELECT * 
  FROM `exams` 
  WHERE `hour` > '13:59:59'
  AND `date` = '2020-06-20';


6. Selezionare tutti i corsi di laurea magistrale (38)

  SELECT * 
  FROM `degrees` 
  WHERE `level` = 'magistrale';


7. Da quanti dipartimenti è composta l'università? (12)

  SELECT *
  FROM `departments`;


8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)

  SELECT * 
  FROM `teachers` 
  WHERE `phone` IS NULL;


  
GROUP BY
1. Contare quanti iscritti ci sono stati ogni anno

  SELECT YEAR(`enrolment_date`) AS 'enrolment_year', COUNT(*) AS 'enrolled_students'
  FROM `students`
  GROUP BY enrolment_year;


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

  SELECT `office_address`, COUNT(*) AS 'teachers_in_same_building'
  FROM `teachers`
  GROUP BY office_address
  HAVING COUNT(*) > 1;


3. Calcolare la media dei voti di ogni appello d'esame

  SELECT `exam_id`, AVG(`vote`) AS 'average_vote'
  FROM `exam_student`
  GROUP BY `exam_id`;


4. Contare quanti corsi di laurea ci sono per ogni dipartimento

  SELECT `department_id`, COUNT(*) AS 'degree_count'
  FROM `degrees`
  GROUP BY `department_id`;



JOIN
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

  SELECT `students`.*, `degrees`.`name` AS 'corso_di_laurea'
  FROM `degrees`
  JOIN `students`
  ON `students`.`degree_id` = `degrees`.`id`
  WHERE `degrees`.`name` = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

  SELECT `degrees`.*, `departments`.`name` AS 'dipartimento'
  FROM `degrees`
  JOIN `departments`
  ON `departments`.`id` = `degrees`.`department_id`
  WHERE `departments`.`name` = 'Dipartimento di Neuroscienze'
  AND `degrees`.`level` = 'magistrale';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

  SELECT `teachers`.*, `courses`.`name` AS 'corsi_di_insegnamento'
  FROM `teachers`
  JOIN `course_teacher`
  ON `course_teacher`.`teacher_id` = `teachers`.`id`
  JOIN `courses`
  ON `courses`.`id` = `course_teacher`.`course_id`
  WHERE `teacher_id` = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

  SELECT `students`.`surname`, `students`.`name`, `degrees`.`name` AS 'corso_di_laurea', `departments`.`name` AS 'dipartimento'
  FROM `students`
  JOIN `degrees`
  ON `degrees`.`id` = `students`.`degree_id`
  JOIN `departments`
  ON `departments`.`id` = `degrees`.`department_id`
  ORDER BY `students`.`surname`, `students`.`name`;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

  SELECT `degrees`.`name` AS 'corso_di_laurea', `courses`.`name` AS 'corsi_di_insegnamento', `teachers`.`name` AS 'nome_docente', `teachers`.`surname` AS 'cognome_docente'
  FROM `degrees`
  JOIN `courses`
  ON `courses`.`degree_id` = `degrees.id`
  JOIN `course_teacher`
  ON `course_teacher`.`course_id` = `courses.id`
  JOIN `teachers`
  ON `teachers`.`id` = `course_teacher`.`teacher_id`
  ORDER BY `degrees`.`name`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

  SELECT DISTINCT `teachers`.`name` AS 'nome_docente', `teachers`.`surname` AS 'cognome_docente', `departments`.`name` AS 'dipartimento'
  FROM `teachers`
  JOIN `course_teacher`
  ON `course_teacher`.`teacher_id` = `teachers`.`id`
  JOIN `courses`
  ON `courses`.`id` = `course_teacher`.`course_id`
  JOIN `degrees`
  ON `degrees`.`id` = `courses`.`degree_id`
  JOIN `departments`
  ON `departments`.`id` = `degrees`.`department_id`
  WHERE `departments`.`name` = 'Dipartimento di Matematica'
  ORDER BY `teachers`.`surname`;


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18
